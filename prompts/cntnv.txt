You're an expert in stochastic modeling and you're tasked to solve the following problem.

Objective:
----------
Maximize a vendor's expected profit in a setting where the vendor orders a certain quantity of liquid at the beginning of the day and sells it throughout the day.

Problem Description:
--------------------
A vendor must decide how many units of a liquid product to purchase at the start of each day. The vendor's profit is determined by:
- The per-unit cost of purchasing the product (c)
- The per-unit selling price (s)
- The per-unit salvage value (w), for any unsold inventory at the end of the day

The daily demand, D, follows a Burr Type XII distribution with parameters alpha and beta. Its CDF is given by:
  F(x) = 1 - [ 1 + x^alpha ]^(-beta)
where x, alpha, and beta are strictly positive.

Given Model Factors (defaults in parentheses):
----------------------------------------------
- Cost (c): cost paid per unit volume when ordering (5)
- Price (s): selling price per unit volume (9)
- Salvage (w): salvage value per unit volume of unsold product (1)
- alpha: Burr distribution parameter (2)
- beta: Burr distribution parameter (20)
- Quantity (x): the decision variable for how many units of the product are ordered (0.5 as a starting guess)

Random Demand:
--------------
Each day's demand is a continuous random variable D with the above Burr Type XII distribution. If actual demand exceeds x, there are lost sales. If demand is less than x, the vendor salvages unsold units at w each.

Requirements:
-------------
1. Analytical / Closed-Form Approach
   - If a closed-form solution exists, derive and explain it.
   - Justify your assumptions or approximations.

2. Simulation-Based Approach
   - If a closed-form approach is not feasible or if you want additional verification:
     - Develop a simulation model that, for a given x, estimates the expected profit.
     - Propose an optimization strategy (e.g., direct search, gradient-based method, or other) to find x that maximizes expected profit.
     - You have a limited budget of [BUDGET] objective function evaluations/replications.
   - If you provide code, place it in one single code block enclosed by:
       ```python
       # ...your code...
       ```
     so it can be extracted by regex and run automatically.
   - The code should clearly:
       - Generate demand from the Burr distribution.
       - Calculate profit for a given x.
       - Explore or optimize x within the allowed [BUDGET].

3. Performance Measures & Validation
   - Report the expected profit for your proposed solution(s).
   - If simulating, estimate the variance or provide confidence intervals for the profit.
   - Compare your proposed solution to a baseline (e.g., x=0) to show improvement.

Deliverables:
-------------
1. Solution Explanation
   - Whether you use a closed-form or simulation, provide a clear explanation of the method, the resulting x, and a brief justification.

2. If Submitting Code
   - Use a single fenced code block: ```python ...```.
   - Must be self-contained and runnable without non-standard libraries.
   - Show how demand is generated, profit is calculated, and x is iterated or optimized.

3. Optimization Results
   - Present the recommended ordering quantity x.
   - Provide numeric results (expected profit, confidence intervals, or other metrics).

Testing Notes:
-------------
- A budget [BUDGET] (e.g., 1000) is provided.
- Random solutions can be generated by drawing x from an exponential distribution (mean = 1) if you want to perform a stochastic search.
- Your solution will be evaluated primarily on the estimated or derived expected profit.

Success Criteria:
----------------
1. Feasibility: x >= 0
2. Demonstrated Improvement: The expected profit should exceed that of trivial solutions like x=0.
3. Justification: Provide reasoning or numerical evidence for your recommended decision.

Final Instructions:
------------------
- Do not reveal any known exact optimum in your final answer.
- The goal is to test whether an approach can discover the solution, not to provide it directly.
- If you choose a simulation approach, justify your method.
- If you find a closed-form or near-closed-form solution, derive and validate it.